// The provided TypeScript code implements the QuickSort algorithm, which is a highly efficient sorting algorithm that uses a divide-and-conquer approach to sort elements in an array. Here's a step-by-step explanation of how the code works:

// quick_sort Function:

// Parameters: It takes an array arr of numbers and two indices, left and right, which default to 0 and arr.length - 1, respectively. These indices represent the portion of the array to be sorted.
// Base Case: The function first checks if left < right. If this condition is false, it means the sub-array is either empty or has a single element, and no sorting is needed.
// Partitioning: If there are at least two elements, the partition function is called with the current left and right indices. This function selects a pivot element and rearranges the elements in the array so that all elements less than the pivot come before it, and all elements greater come after it. The partition function returns the final index of the pivot, now placed in its correct sorted position.
// Recursive Calls: The array is then recursively sorted in two parts: the sub-array to the left of the pivot and the sub-array to the right of the pivot, excluding the pivot itself since it's already in its correct position.
// partition Function:



// explanation of quick sort
// Base Condition: if (left < right) { - This line checks if the left index is less than the right index. This condition serves as the base case for the recursion, ensuring that the function only proceeds if there are at least two elements to sort. If left is not less than right, the function does nothing and returns, as the array or sub-array is either empty or contains a single element, which is already sorted.
//     Partitioning: const pivotIndex = partition(arr, left, right); - This line calls the partition function (not shown in the snippet) with the current array segment defined by left and right. The partition function rearranges the elements in the array segment so that all elements less than a chosen pivot element are moved to its left, and all greater elements are moved to its right. The function returns the final index of the pivot element after partitioning.    
//     Recursive Calls:
//     quick_sort(arr, left, pivotIndex - 1); - This line recursively calls quick_sort on the sub-array to the left of the pivot element (i.e., between the current left index and one less than the pivot index). This sorts the left segment of the array.
//     quick_sort(arr, pivotIndex + 1, right); - This line recursively calls quick_sort on the sub-array to the right of the pivot element (i.e., between one more than the pivot index and the current right index). This sorts the right segment of the array.
//     In summary, the quick_sort function sorts an array by recursively partitioning it into smaller segments around a pivot element and then sorting those segments.
    
//     const pivotIndex = partition(arr, left, right);
    
// The quick_sort function is an implementation of the QuickSort algorithm, which is a highly efficient sorting algorithm that uses a divide-and-conquer approach to sort elements in an array. Here's a step-by-step explanation of how the quick_sort function works, followed by an example:

// Explanation:
// Base Condition: The function first checks if the left index is less than the right index. If not, the array or sub-array is either empty or has one element, and no sorting is needed.
// Partitioning: If the base condition is met, the function calls the partition function with the current array and the left and right indices. This function selects a pivot (the element at the right index), rearranges the elements in the array so that all elements less than the pivot come before it and all elements greater come after it, and returns the new index of the pivot.
// Recursive Calls: After partitioning, the function recursively calls itself twice: once for the sub-array to the left of the pivot (elements less than the pivot) and once for the sub-array to the right of the pivot (elements greater than the pivot).
// Example:
// Consider an array [3, 6, 8, 10, 1, 2, 1].

// First Call: left = 0, right = 6 (length of array - 1).
// Partitioning: Let's say the pivot is 1 (the last element). After partitioning, the array might look like [1, 1, 8, 10, 3, 2, 6], with the pivot 1 now at index 1. The function partition returns 1.
// Recursive Call on Left Sub-array: quick_sort is called on the sub-array to the left of the pivot, which is [1]. Since this sub-array has only one element, it's already sorted.
// Recursive Call on Right Sub-array: quick_sort is called on the sub-array to the right of the pivot, [8, 10, 3, 2, 6]. This process of partitioning and recursive calls continues until the entire array is sorted.
// After several recursive calls, the array becomes fully sorted: [1, 1, 2, 3, 6, 8, 10].
// This example simplifies the process and assumes a specific outcome of the partitioning step for illustrative purposes. The actual result of each partitioning step depends on the implementation of the partition function and the initial state of the array.

//It serves as a base case for the recursive calls in the quick sort algorithm. If left is not less than right, it means the sub-array has either one element or no elements at all, and thus, it does not need to be sorted further.
export default function quick_sort(arr: number[], left = 0, right = arr.length - 1): void {
    if (left < right) {
        const pivotIndex = partition(arr, left, right);
        quick_sort(arr, left, pivotIndex - 1); // Sorts the left side of pivot
        quick_sort(arr, pivotIndex + 1, right); // Sorts the right side of pivot
    }
}

// Parameters: It takes the same array arr and the left and right indices defining the current segment of the array to work on.
// Pivot Selection: The pivot is chosen to be the element at the right index. This is a simple choice but not necessarily optimal in all cases.
// Rearrangement: The function iterates through the array from left to right - 1, comparing each element with the pivot.
// A separate index i is maintained to track the "wall" - the boundary between elements less than the pivot and those greater. 
//Initially, i is set to left - 1.
// If an element is found that is less than the pivot, i is incremented, and that element is swapped with the element at index i, effectively moving it to the "less than pivot" side of the array.
// Final Pivot Placement: After all elements have been compared with the pivot, the pivot itself is swapped with the element immediately following the last element found to be less than the pivot (i + 1). This places the pivot in its correct sorted position.
// Return Value: The function returns the index of the pivot (i + 1), which is used to determine the boundaries for the subsequent recursive calls to quick_sort.
// This implementation of QuickSort sorts the array in-place, meaning it rearranges the elements within the original array without requiring additional arrays for temporary storage. QuickSort is known for its efficiency, with average and best-case time complexities of O(n log n), though its worst-case time complexity is O(n^2) when the smallest or largest element is always chosen as the pivot.

// Step by step with example explanation
//The selected lines from the [`partition`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A30%2C%22character%22%3A0%7D%5D "src/day2/QuickSort.ts") function in the QuickSort algorithm implementation in TypeScript are explained below with a step-by-step example:

// ### Example:
// Consider an array `arr = [5, 3, 8, 4, 2, 7, 1, 6]`, and we want to partition this array from `left = 0` to `right = 7` (the entire array).

// 1. **Initialization:**
//    - `pivot = arr[right] = 6` (Choosing the rightmost element as the pivot)
//    - `i = left - 1 = -1` (Pointer for the greater element)

// 2. **Loop through the array (for loop):**
//    - **Iteration 1:** `j = 0`, `arr[j] = 5 < pivot = 6`, so `i = 0`, and we swap `arr[i]` with `arr[j]`. No change since `i` and `j` are the same.
//    - **Iteration 2:** `j = 1`, `arr[j] = 3 < pivot = 6`, so `i = 1`, and we swap `arr[i]` with `arr[j]`. No change since `i` and `j` are the same.
//    - **Iteration 3:** `j = 2`, `arr[j] = 8`, not less than `pivot = 6`, so no swap.
//    - **Iteration 4:** `j = 3`, `arr[j] = 4 < pivot = 6`, so `i = 2`, and we swap `arr[i]` with `arr[j]`. The array becomes `[5, 3, 4, 8, 2, 7, 1, 6]`.
//    - **Iteration 5:** `j = 4`, `arr[j] = 2 < pivot = 6`, so `i = 3`, and we swap `arr[i]` with `arr[j]`. The array becomes `[5, 3, 4, 2, 8, 7, 1, 6]`.
//    - **Iteration 6:** `j = 5`, `arr[j] = 7`, not less than `pivot = 6`, so no swap.
//    - **Iteration 7:** `j = 6`, `arr[j] = 1 < pivot = 6`, so `i = 4`, and we swap `arr[i]` with `arr[j]`. The array becomes `[5, 3, 4, 2, 1, 7, 8, 6]`.

// 3. **After the loop:**
//    - Swap the pivot element with the element at `i + 1` (`i = 4`), so swap `arr[5]` with `arr[7]`. The array becomes `[5, 3, 4, 2, 1, 6, 8, 7]`.

// 4. **Return the pivot index:**
//    - `return i + 1 = 5`. The pivot index is `5`, indicating that `6` is now in its correct sorted position, and the array is partitioned around it.

// This process helps in dividing the array into two parts, where elements on the left of the pivot are smaller, and on the right are larger, which is a crucial step in the QuickSort algorithm.
function partition(arr: number[], left: number, right: number): number {
    const pivot = arr[right]; // Choosing the rightmost element as pivot
    let i = left - 1; // Pointer for the greater element  or it starts from left -1 so that after the first increment it points to the first element for a swap if needed.
    for (let j = left; j < right; j++) {
        if (arr[j] < pivot) {
            i++;
            [arr[i], arr[j]] = [arr[j], arr[i]]; // Swap if element is lesser than pivot
        }
    }
    [arr[i + 1], arr[right]] = [arr[right], arr[i + 1]]; // Swap the pivot element with the element at i + 1
    return i + 1; // Return the pivot index
}



// another example for partition function
// The [`partition`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A0%7D%5D "src/day2/QuickSort.ts") function is a key component of the QuickSort algorithm. It rearranges the elements of the array such that elements less than a chosen pivot are moved to the left of the pivot, and elements greater than the pivot are moved to the right. Here's a step-by-step explanation of how the [`partition`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A0%7D%5D "src/day2/QuickSort.ts") function works on the array `[5,7,9,3,6,10,14,8,12]` with [`left`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A34%7D%5D "src/day2/QuickSort.ts") as `0` and [`right`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A48%7D%5D "src/day2/QuickSort.ts") as `8` (assuming the last element, `12`, is chosen as the pivot):

// 1. **Initialization**: 
//    - Pivot is `12` (the rightmost element).
//    - [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") is initialized to [`left - 1`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A34%7D%5D "src/day2/QuickSort.ts"), which is `-1`.
   
// 2. **Loop through the array** from index [`left`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A34%7D%5D "src/day2/QuickSort.ts") (`0`) to [`right - 1`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A48%7D%5D "src/day2/QuickSort.ts") (`7`), comparing each element with the pivot (`12`):
//    - **Iteration 1**: [`arr[0]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `5`, which is less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `0` and swap [`arr[0]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[0]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). No change as it's swapping with itself.
//    - **Iteration 2**: [`arr[1]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `7`, less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `1`, swap [`arr[1]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[1]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). No change.
//    - **Iteration 3**: [`arr[2]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `9`, less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `2`, swap [`arr[2]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[2]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). No change.
//    - **Iteration 4**: [`arr[3]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `3`, less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `3`, swap [`arr[3]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[3]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). No change.
//    - **Iteration 5**: [`arr[4]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `6`, less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `4`, swap [`arr[4]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[4]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). No change.
//    - **Iteration 6**: [`arr[5]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `10`, less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `5`, swap [`arr[5]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[5]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). No change.
//    - **Iteration 7**: [`arr[6]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `14`, greater than `12`. [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") remains `5`, no swap.
//    - **Iteration 8**: [`arr[7]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") is `8`, less than `12`. Increment [`i`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") to `6`, swap [`arr[6]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") with [`arr[7]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts"). The array becomes `[5,7,9,3,6,10,8,14,12]`.

// 3. **After the loop**, swap the pivot with the element at [`i + 1`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts") ([`arr[7]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts")):
//    - Swap [`arr[7]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") (`14`) with [`arr[8]`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A55%2C%22character%22%3A19%7D%5D "src/day2/QuickSort.ts") (`12`). The array now looks like `[5,7,9,3,6,10,8,12,14]`.

// 4. **Return the pivot index**, which is [`i + 1 = 7`](command:_github.copilot.openSymbolFromReferences?%5B%7B%22%24mid%22%3A1%2C%22fsPath%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22external%22%3A%22file%3A%2F%2F%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22path%22%3A%22%2FUsers%2Fschakkirala2%2FDesktop%2FPractice%2Fkata-machine%2Fsrc%2Fday2%2FQuickSort.ts%22%2C%22scheme%22%3A%22file%22%7D%2C%7B%22line%22%3A57%2C%22character%22%3A4%7D%5D "src/day2/QuickSort.ts"). This indicates that `12` is now in its correct sorted position.

// The result of this partition step is that all elements to the left of `12` are smaller, and all elements to the right are larger, effectively partitioning the array around the pivot `12`. This process is recursively applied to the subarrays on either side of the pivot in the QuickSort algorithm to achieve a fully sorted array.